openapi: '3.0.2'
info:
  title: 'Wallstreet Online Stock Recommendation API'
  description: 'Get stock recommendations for users of WSO (Wallstreet Online).'
  version: '0.1'
  contact:
    name: 'Wallstreet Online API'
    url: 'https://rostlab.org'
servers:
  - url: 'http://127.0.0.1:8080/api/'
    description: 'Local Dev Server'
paths:
  /recommend/{user}:
    get:
      summary: 'Get recommended stocks for a user'
      description: 'Returns a list of recommended stocks for a user and his current portfolio'
      parameters:
        - $ref: '#/components/parameters/user'
        - $ref: '#/components/parameters/portfolio'
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stock'
                default: []
        404:
          description: 'Non existing user'
          content:
            text/plain:
              schema:
                title: 'User not found'
                type: string
                example: '{user} not found'
    post:
      summary: 'Notify server of stock selection'
      description: 'Notifies the server that the user has signified interest in a recommended stock'
      parameters:
        - $ref: '#/components/parameters/user'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                choice:
                  $ref: '#/components/schemas/stock'
                offered:
                  type: array
                  items:
                    type: number
        required: true
      responses:
        200:
          description: 'Selection acknowledged'
          content:
            text/plain:
              schema:
                title: 'User selection acknowledged'
                type: string
                example: '{user} selection ({stock.name}: {stock.id}) acknowledged'
        404:
          description: 'Non existing user'
          content:
            text/plain:
              schema:
                title: 'User not found'
                type: string
                example: '{user} not found'
  /stock/{isin}:
    get:
      summary: 'Get stock details'
      description: 'Returns detailed information on the stock along with historical data, ordered by date (newest first)'
      parameters:
        - name: "isin"
          description: "The stock's ISIN"
          in: path
          required: true
          $ref: '#/components/schemas/isin'
        - name: "exchange"
          in: query
          required: true
          $ref: '#/components/schemas/exchange'
        - name: "currency"
          in: query
          $ref: '#/components/schemas/exchange'
        - name: "from"
          description: "ISO 8601 UTC-Timestamp of first price to include"
          in: query
          example: '2019-05-05T08:00:00Z'
          schema:
            type: string
            format: date-time
        - name: "to"
          description: "ISO 8601 UTC-Timestamp of last price to include"
          in: query
          example: '2019-05-30T08:00:00Z'
          schema:
            type: string
            format: date-time
        - name: "limit"
          description: "Limits the number of entries returned. As results are ordered by date, a limit of 100 would return
          only the 100 newest prices"
          in: query
          schema:
            type: integer
            minimum: 0
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stock'
                default: []
        404:
          description: 'Non existing stock'
          content:
            text/plain:
              schema:
                title: 'Stock not found'
                type: string
                example: '{isin} not found'

components:
  parameters:
    user:
      name: user
      in: path
      description: '**User**: Identification of the user, either an ID or a name - depends on WSO'
      example: 'test-user'
      required: true
      schema:
        type: string
    portfolio:
      in: query
      name: portfolio
      description: "**Portfolio**: The id's of stocks contained in the user's portfolio"
      content:
        application/json:
          schema:
            type: array
            items:
              type:
                object
            default: []
  schemas:
    stock:
        type: object
        properties:
          name:
            type: string
            description: "The stock's displayed name (i.e. label)"
            example: "Commerzbank"
          url:
            type: string
            format: url
            description: "URL to WSO's details page for the respective stock"
            example: "https://www.wallstreet-online.de/aktien/commerzbank-aktie"
          isin:
            type: string
            description: "The stock's ISIN"
            $ref: '#/components/schemas/isin'
          category:
            $ref: '#/components/schemas/stockCategory'
          value:
            type: number
            description: "The stock's last known value"
            minimum: 0
            example: 5.249
          absolute:
            type: number
            description: "Absolute change in value compared to the last known value"
            example: -0.066
          relative:
            type: number
            description: "Relative change in value compared to the last known value"
            minimum: -1.0
            example: -1.24
          updated_at:
            type: string
            format: date-time
            description: "ISO-8601 UTC-Timestamp of when the stock's value was last updated"
            example: "2019-09-27T08:00:00Z"
          currency:
            $ref: '#/components/schemas/currency'
          exchange:
            $ref: '#/components/schemas/exchange'
          volume:
            type: number
            description: "The security's total revenue"
            minimum: 0
            example: 16182197
          history:
            type: array
            default: null
            description: "*Optional*: The stock's past prices"
            items:
              $ref: '#/components/schemas/stockPrice'
        required: ['stock', 'category', 'value', 'absolute', 'relative'
                  , 'updated_at', 'exchange', 'revenue', 'name', 'url', 'isin', 'volume']
    stockCategory:
      type: object
      description: "Describes a stock's category, i.e. it's name and url"
      properties:
        name:
          type: string
          example: "Banken"
          description: "Displayed name of the category (i.e. label)"
        url:
          type: string
          example: "https://www.wallstreet-online.de/aktien/branche/banken-aktien"
          description: "URL to WSO page with details/further stocks on/belonging to the category"
          format: url
      required: ['name', 'url']
    stockPrice:
      type: object
      description: "Prices of a stock"
      properties:
        opened_at:
          type: string
          format: date-time
          description: "ISO-8601 UTC-Timestamp of when the aggregation period begins"
          example: "2019-09-27T08:00:00Z"
        closed_at:
          type: string
          format: date-time
          description: "ISO-8601 UTC-Timestamp of when the aggregation period ends"
          example: "2019-09-27T18:00:00Z"
        open:
          type: number
          description: "The stock's opening value"
          example: 387.1
          minimum: 0
        high:
          type: number
          description: "The highest value observed over the aggregation period"
          example: 388.23
          minimum: 0
        low:
          type: number
          description: "The lowest value observed over the aggregation period"
          example: 380.3
          minimum: 0
        close:
          type: number
          description: "The stock's closing value"
          example: 381.53
          minimum: 0
        volume:
          type: number
          description: "The stock's volume"
          example: 3594472
          minimum: 0
    currency:
      type: string
      description: "Currency the stock is traded in"
      example: "EUR"
      enum:
        - "EUR"
        - "USD"
    exchange:
      type: string
      description: "Acronym of the exchange the stock is sold at"
      example: "ETR"
      pattern: "[A-Z]{3,4}"
    isin:
      type: string
      description: "The stock's ISIN"
      example: "US0378331005"
      pattern: '[a-z]{2}[0-9]{10}'
